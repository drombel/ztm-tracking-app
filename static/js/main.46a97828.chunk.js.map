{"version":3,"sources":["assets/bus-logo.png","utils/query.js","utils/apis.js","components/map/index.js","actions/routes.js","components/models/Buses/Buses.js","router/index.js","views/Main/index.js","views/Buses/index.js","components/header/index.js","views/NotFound/index.js","app/App.js","serviceWorker.js","reducers/routesReducer.js","reducers/index.js","stores/index.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","getBuses","a","query","get","then","response","data","Vehicles","filter","vehicle","GPSQuality","catch","error","console","res","buses","getRoutes","date","Date","toISOString","split","trips","routes","MapContainer","props","useState","id","hidden","selected","setSelected","markers","setMarkers","idField","refresher","useRef","mapMarker","MapSidebarItem","mapSidebarItem","autoUpdate","menu","setMenu","mapRef","bounds","setBounds","zoom","setZoom","fetchData","refreshFunc","newMarkers","length","useEffect","current","setInterval","clearTimeout","Marker","item","MapMarker","closeFunction","Cluster","lat","lng","supercluster","cluster","pointCount","className","onClick","expansionZoom","Math","min","getClusterExpansionZoom","panTo","map","key","Lat","Lon","v","bootstrapURLKeys","process","defaultCenter","center","defaultZoom","onChildClick","e","yesIWantToUseGoogleMapApiInternals","shouldUnregisterMapOnUnmount","onGoogleApiLoaded","setClickableIcons","onChange","nw","se","points","marker","type","properties","geometry","coordinates","parseFloat","useSupercluster","options","radius","maxZoom","clusters","longitude","latitude","isCluster","point_count","Clusters","setRoutes","payload","Buses","useSelector","state","dispatch","useDispatch","fetchRoutes","fetchBuses","useCallback","bus","RouteStop","find","route","tripId","parseInt","Route","routeId","Line","DelayTime","abs","Delay","substr","replace","sort","b","localeCompare","colSpan","title","VehicleCode","Speed","to","exact","component","href","rel","target","onClickMenuHide","src","logo","alt","router","activeClassName","App","path","NotFound","Boolean","window","location","hostname","match","initial_state","routesReducer","action","tripHeadsign","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.46a97828.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bus-logo.8ff7795b.png\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://ckan2.multimediagdansk.pl',\r\n    // timeout: 1000,\r\n});\r\nexport default instance;","import query from './query';\r\nimport axios from 'axios'\r\n\r\nexport const getBuses = async () => {\r\n    const buses = await query.get('/gpsPositions')\r\n        .then(response => response.data.Vehicles.filter(vehicle => vehicle.GPSQuality >= 2))\r\n        .catch((error) => {\r\n            console.error(error);\r\n            return [];\r\n        }).then(res => res);\r\n    return buses;\r\n};\r\n\r\nexport const getRoutes = async () => {\r\n    const date = (new Date()).toISOString().split('T')[0];\r\n    const routes = await axios.get('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/b15bb11c-7e06-4685-964e-3db7775f912f/download/trips.json')\r\n        .then(response => response.data[date].trips)\r\n        .catch((error) => {\r\n            console.error(error);\r\n            return [];\r\n        }).then(res => res);\r\n    return routes;\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport useSupercluster from \"use-supercluster\";\r\nimport './map.scss';\r\n\r\nfunction MapContainer(props) {\r\n    const [selected, setSelected] = useState({ id: 0, hidden: false })\r\n    const [markers, setMarkers] = useState([]);\r\n    const idField = props.idField;\r\n    const refresher = useRef(null);\r\n    const mapMarker = props.mapMarker;\r\n    const MapSidebarItem = props?.mapSidebarItem;\r\n    const autoUpdate = props?.autoUpdate ?? false;\r\n    const [menu, setMenu] = useState(false);\r\n\r\n    const mapRef = useRef();\r\n    const [bounds, setBounds] = useState(null);\r\n    const [zoom, setZoom] = useState(10);\r\n\r\n    const fetchData = async () => {\r\n        let newMarkers = await props?.refreshFunc() ?? [];\r\n        if (newMarkers.length === 0) {\r\n            console.error('Fetched data from Tristar API is empty')\r\n            return;\r\n        }\r\n        setMarkers(newMarkers);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        if (autoUpdate) refresher.current = setInterval(() => fetchData(), autoUpdate);\r\n        // cleanup\r\n        return () => clearTimeout(refresher.current)\r\n    }, []);\r\n\r\n    const Marker = ({ item, MapMarker }) => {\r\n        const current = selected.id === item[idField] && !selected.hidden;\r\n        item.current = current;\r\n        const onClick = () => setSelected({ id: 0, hidden: true });\r\n        item.closeFunction = onClick;\r\n        return <MapMarker item={item} />\r\n    };\r\n\r\n    const Cluster = ({ lat, lng, supercluster, cluster, pointCount }) => {\r\n        const onClick = () => {\r\n            const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\r\n            mapRef.current.setZoom(expansionZoom);\r\n            mapRef.current.panTo({ lat, lng });\r\n        };\r\n        return (<div className='marker' onClick={onClick}>\r\n            <div className=\"cluster\">\r\n                {pointCount}\r\n            </div>\r\n        </div>);\r\n    };\r\n\r\n    const onChildClick = (key, data) => {\r\n        // just to check if it's not a supercluster which doesn't have assigned idField\r\n        const supercluster = data.item?.[idField] ?? false;\r\n        if (supercluster) {\r\n            setSelected(({ id, hidden }) => {\r\n                const newId = id === data.item[idField] ? 0 : data.item[idField];\r\n                return { id: newId, hidden }\r\n            });\r\n        }\r\n        if (selected.hidden)\r\n            setSelected({ id: 0, hidden: false })\r\n    };\r\n\r\n    const onClick = e => setSelected({ id: 0, hidden: false });\r\n\r\n    const onGoogleApiLoaded = ({ map }) => {\r\n        map.setClickableIcons(false);\r\n        mapRef.current = map;\r\n    };\r\n\r\n    const Clusters = () => {\r\n        const points = markers.map(marker => ({\r\n            type: \"Cluster\",\r\n            properties: { item: { ...marker }, cluster: false },\r\n            geometry: { type: \"Point\", coordinates: [parseFloat(marker.Lon), parseFloat(marker.Lat)] }\r\n        }));\r\n\r\n        const { clusters, supercluster } = useSupercluster({ points, bounds, zoom, options: { radius: 75, maxZoom: 20 } });\r\n\r\n        const newClusters = clusters.map((cluster, key) => {\r\n            const [longitude, latitude] = cluster.geometry.coordinates;\r\n            const { cluster: isCluster, point_count: pointCount } = cluster.properties;\r\n\r\n            return isCluster ?\r\n                (<Cluster key={key} lat={latitude} lng={longitude} supercluster={supercluster} cluster={cluster} pointCount={pointCount} />) :\r\n                (<Marker key={key} lat={latitude} lng={longitude} item={cluster.properties.item} MapMarker={mapMarker} />);\r\n        });\r\n\r\n        return newClusters;\r\n    };\r\n\r\n    const onClickMenu = () => setMenu(v => !v);\r\n\r\n    return (\r\n        <div className='map'>\r\n            {MapSidebarItem &&\r\n                <div className={`map__sidebar${menu ? ' active' : ''}`}>\r\n                    <div className='map__sidebar-container'>\r\n                        {markers.map((item, key) => {\r\n                            const current = item[idField] === selected.id;\r\n                            const onClick = () => {\r\n                                setSelected({ id: item[idField], hidden: false })\r\n                                mapRef.current.setZoom(16);\r\n                                mapRef.current.panTo({ lat: item.Lat, lng: item.Lon });\r\n                            };\r\n                            return (\r\n                                <div className={`map__sidebar-item${current ? ' active' : ''}`} key={key} onClick={onClick}>\r\n                                    <MapSidebarItem item={item} />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        <div className='menu-button' onClick={onClickMenu}><span></span></div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_KEY }}\r\n                defaultCenter={props.center}\r\n                defaultZoom={props.zoom}\r\n                onChildClick={onChildClick}\r\n                onClick={onClick}\r\n                yesIWantToUseGoogleMapApiInternals={true}\r\n                shouldUnregisterMapOnUnmount={true}\r\n                onGoogleApiLoaded={onGoogleApiLoaded}\r\n                onChange={({ zoom, bounds }) => {\r\n                    setZoom(zoom);\r\n                    setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\r\n                }}\r\n            >\r\n                {Clusters().map(item => item)}\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapContainer;","export const setRoutes = ({ routes = [] }) => {\r\n    return {\r\n        type: 'ROUTES_SET',\r\n        payload: { routes },\r\n    };\r\n};","import React, { useEffect, useCallback } from 'react';\r\nimport { getBuses, getRoutes } from './../../../utils/apis';\r\nimport Map from './../../map';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setRoutes } from './../../../actions/routes';\r\n\r\nfunction Buses(props) {\r\n    const routes = useSelector(state => state.routes)\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchRoutes = async () => dispatch(setRoutes({ routes: await getRoutes() }));\r\n\r\n    useEffect(() => {\r\n        if (routes.length === 0) fetchRoutes();\r\n    }, [])\r\n\r\n    const fetchBuses = useCallback(async () => {\r\n        let buses = await getBuses();\r\n        buses = buses.map(bus => {\r\n            bus.RouteStop = routes.find(route => route.tripId === parseInt(bus.Route) && route.routeId === parseInt(bus.Line));\r\n            bus.DelayTime = (new Date(Math.abs(bus.Delay) * 1000).toISOString().substr(11, 8)).replace(/00:/, '');\r\n            return bus;\r\n        });\r\n        buses.sort((a, b) => a.Line.localeCompare(b.Line))\r\n        return buses;\r\n    }, [routes]);\r\n\r\n\r\n    const coords = { lat: 54.385561, lng: 18.600739 };\r\n    const map_marker = ({ item }) => {\r\n        return (\r\n            <div className={`marker`}>\r\n                <div className=\"dot\">{item.Line}</div>\r\n                {item.current &&\r\n                    <div className='info'>\r\n                        <table className=\"table-responsive table-striped table-hover\">\r\n                            <thead className='w-100 d-table'>\r\n                                <tr>\r\n                                    <td colSpan={2} onClick={item.closeFunction}>Hide</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='w-100 d-table'>\r\n                                {item.Line && (<tr><td className='p-1'>Line</td><td className='border-left p-1 font-weight-bold'>{item.Line}</td></tr>)}\r\n                                {item.Delay !== 0 && (<tr><td className='p-1'>{item.Delay > 0 ? 'Delay' : 'Before time'}</td><td className='border-left p-1 font-weight-bold'>{item.DelayTime}</td></tr>)}\r\n                                {item.RouteStop && (<tr><td className='p-1'>Route</td><td className='border-left p-1 font-weight-bold'>{item.RouteStop.title}</td></tr>)}\r\n                                {item.VehicleCode && (<tr><td className='p-1'>Vehicle code</td><td className='border-left p-1 font-weight-bold'>{item.VehicleCode}</td></tr>)}\r\n                                {item.Speed > 0 && (<tr><td className='p-1'>Speed</td><td className='border-left p-1 font-weight-bold'>{item?.Speed} km/h</td></tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const map_sidebar_item = ({ item }) => {\r\n        return (\r\n            <div className='row no-gutters'>\r\n                <div className='col-2 col-sm-3 p-2 font-weight-bold d-flex align-items-center justify-content-center'>{item.Line}</div>\r\n                <div className='col-10 col-sm-9 p-2 font-weight-bold border-left'>{item.RouteStop && item.RouteStop.title}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* {data?.map?.((item, key) => (<div key={key}>{item.Line}, {item.VehicleId}, {item.Speed}, {item.Delay} Lat: {item.Lat}, Long: {item.Lon}</div>))} */}\r\n            <div className='vh-100' >\r\n                {routes.length > 0 && <Map center={coords} zoom={12} refreshFunc={fetchBuses} idField={'VehicleId'} autoUpdate={5000} mapMarker={map_marker} mapSidebarItem={map_sidebar_item} />}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Buses;","import Main from './../views/Main';\r\nimport Buses from './../views/Buses';\r\n\r\nexport default [\r\n    {\r\n        to: '/',\r\n        exact: true,\r\n        component: Main,\r\n        // title: 'Main page',\r\n    },\r\n    {\r\n        to: '/buses',\r\n        component: Buses,\r\n        title: 'Buses',\r\n    }\r\n];","import React from 'react';\r\n\r\nexport default function () {\r\n    return (\r\n        <div className='p-4'>\r\n            <pre className='text-wrap text-break'>\r\n                <h2>ZTM Tracker</h2>\r\n                <p>\r\n                    Application represents ZTM data based on their API which can be found <a href='https://ckan.multimediagdansk.pl/dataset/tristar' rel=\"noopener noreferrer\" target='_blank' className='font-weight-normal'>here</a>.\r\n                </p>\r\n                <p>\r\n                    For this moment You can see current position of the vehicles like buses and trams around Gdańsk area. Each vehicle shows delay and unique vehicle code.\r\n                </p>\r\n                {/* <p>\r\n                    API currently allows only to view positions of the buses. I wrote them a email and still waiting for answer. After they fix CORS error I will develop bus and tram stops, show destination point of the vehicles and maybe something else.\r\n                </p> */}\r\n                {/* TODO */}\r\n            </pre>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport Buses from '../../components/models/Buses/Buses';\r\nimport './Buses.scss';\r\n\r\nexport default function () {\r\n\r\n    return (\r\n        <div>\r\n            <Buses />\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport router from './../../router';\r\nimport logo from './../../assets/bus-logo.png';\r\nimport './Header.scss';\r\n\r\nexport default function () {\r\n    const [menu, setMenu] = useState(false);\r\n    const onClickMenu = () => setMenu(v => !v);\r\n    const onClickMenuHide = () => setMenu(true)\r\n    return (\r\n        <header className={menu ? 'active' : ''}>\r\n            <nav>\r\n                <div className=\"nav-brand p-3\">\r\n                    <Link to='/' className='text-decoration-none' onClick={onClickMenuHide}>\r\n                        <img src={logo} alt=\"ZTM tracker\" className='img-fluid' />\r\n                        <div className='h2 text-white text-center'>ZTM tracker</div>\r\n                    </Link>\r\n                </div>\r\n                <ul className='nav flex-column'>\r\n                    {router.map(({ to, title, exact }, key) =>\r\n                        title && <NavLink\r\n                            to={to} exact key={key}\r\n                            className='nav-item text-decoration-none py-2 px-3 font-weight-normal h5 m-0'\r\n                            activeClassName='shadow active'\r\n                            onClick={onClickMenuHide}\r\n                        >{title}</NavLink>\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n            <div className='menu-button' onClick={onClickMenu}><span></span></div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function () {\r\n    return (\r\n        <div className='p-4'>\r\n            <pre className='text-wrap'>Sorry, but we couldn't find what you have been looking for :(</pre>\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport Header from './../components/header';\nimport NotFound from '../views/NotFound';\nimport router from './../router';\nimport './App.scss';\n\n\nfunction App() {\n    return (\n        <div className=\"App min-vh-100\">\n            <Router>\n                <div className='d-flex'>\n                    <Header />\n                    <main className='min-vh-100'>\n                        <Switch>\n                            {router.map((item, key) => <Route exact={item.exact} path={item.to} key={key} component={item.component} />)}\n                            <Route component={NotFound} />\n                        </Switch>\n                    </main>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initial_state = [];\r\n\r\nconst routesReducer = (state = initial_state, action) => {\r\n    switch (action.type) {\r\n        case \"ROUTES_SET\":\r\n            const routes = action.payload.routes.map(item => {\r\n                item.title = item.tripHeadsign.replace(/\\(\\d+\\)/g, '');\r\n                // console.log(item);\r\n                return item;\r\n            })\r\n            return routes;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default routesReducer;","import { combineReducers } from 'redux';\r\nimport routesReducer from './routesReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    routes: routesReducer,\r\n});\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from './../reducers'\r\n\r\nconst store = createStore(allReducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './stores';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}